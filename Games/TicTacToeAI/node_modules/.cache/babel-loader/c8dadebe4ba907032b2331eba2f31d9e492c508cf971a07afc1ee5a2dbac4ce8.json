{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\GameZone\\\\Games\\\\TicTacToeAI\\\\src\\\\app.js\",\n  _s = $RefreshSig$();\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { useEffect, useState } from \"react\";\nimport Button from \"./components/Button\";\nimport Square from \"./components/Square\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [squares, setSquares] = useState(Array(9).fill(\"\"));\n  const [turn, setTurn] = useState(\"x\");\n  const [winner, setWinner] = useState(null);\n  const checkEndTheGame = () => {\n    for (let square of squares) {\n      if (!square) return false;\n    }\n    return true;\n  };\n  const checkWinner = () => {\n    const combos = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n    for (let combo of combos) {\n      const [a, b, c] = combo;\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  };\n  const updateSquares = ind => {\n    if (squares[ind] || winner) {\n      return;\n    }\n    const s = squares;\n    s[ind] = turn;\n    setSquares(s);\n    setTurn(turn === \"x\" ? \"o\" : \"x\");\n    const W = checkWinner();\n    if (W) {\n      setWinner(W);\n    } else if (checkEndTheGame()) {\n      setWinner(\"x | o\");\n    }\n  };\n  const resetGame = () => {\n    setSquares(Array(9).fill(\"\"));\n    setTurn(\"x\");\n    setWinner(null);\n  };\n  const minimax = (squares, depth, isMaximizingPlayer) => {\n    const winner = checkWinner();\n    if (winner !== null) {\n      return winner === 'o' ? 10 - depth : depth - 10;\n    }\n    if (checkEndTheGame()) {\n      return 0;\n    }\n    if (isMaximizingPlayer) {\n      let maxEval = -Infinity;\n      for (let i = 0; i < squares.length; i++) {\n        if (squares[i] === \"\") {\n          squares[i] = 'o';\n          const evaluation = minimax(squares, depth + 1, false);\n          squares[i] = \"\";\n          maxEval = Math.max(maxEval, evaluation);\n        }\n      }\n      return maxEval;\n    } else {\n      let minEval = Infinity;\n      for (let i = 0; i < squares.length; i++) {\n        if (squares[i] === \"\") {\n          squares[i] = 'x';\n          const evaluation = minimax(squares, depth + 1, true);\n          squares[i] = \"\";\n          minEval = Math.min(minEval, evaluation);\n        }\n      }\n      return minEval;\n    }\n  };\n  const bestMove = () => {\n    let bestEval = -Infinity;\n    let move = null;\n    for (let i = 0; i < squares.length; i++) {\n      if (squares[i] === \"\") {\n        squares[i] = 'o';\n        const evaluation = minimax(squares, 0, false);\n        squares[i] = \"\";\n        if (evaluation > bestEval) {\n          bestEval = evaluation;\n          move = i;\n        }\n      }\n    }\n    updateSquares(move);\n  };\n  useEffect(() => {\n    if (turn === 'o') {\n      bestMove();\n    }\n  }, [turn]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tic-tac-toe\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" TIC-TAC-TOE \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      resetGame: resetGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: Array.from(\"012345678\").map(ind => /*#__PURE__*/_jsxDEV(Square, {\n        ind: ind,\n        updateSquares: updateSquares,\n        clsName: squares[ind]\n      }, ind, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: winner && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        exit: {\n          opacity: 0\n        },\n        className: \"winner\",\n        children: /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            scale: 0\n          },\n          animate: {\n            scale: 1\n          },\n          exit: {\n            scale: 0,\n            opacity: 0\n          },\n          className: \"text\",\n          children: [/*#__PURE__*/_jsxDEV(motion.h2, {\n            initial: {\n              scale: 0,\n              y: 100\n            },\n            animate: {\n              scale: 1,\n              y: 0,\n              transition: {\n                y: {\n                  delay: 0.7\n                },\n                duration: 0.7\n              }\n            },\n            children: winner === \"x\" ? \"You won :)\" : winner === \"o\" ? \"You lost :(\" : \"No winner :/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              scale: 0\n            },\n            animate: {\n              scale: 1,\n              transition: {\n                delay: 1.3,\n                duration: 0.2\n              }\n            },\n            className: \"win\",\n            children: winner === \"x | o\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Square, {\n                clsName: \"x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Square, {\n                clsName: \"o\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Square, {\n                clsName: winner\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 41\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              scale: 0\n            },\n            animate: {\n              scale: 1,\n              transition: {\n                delay: 1.5,\n                duration: 0.3\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              resetGame: resetGame\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this)]\n        }, \"child-box\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this)\n      }, \"parent-box\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"v+CtKIuGPFYFTcHGlGPL6fBxDEE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["motion","AnimatePresence","useEffect","useState","Button","Square","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","squares","setSquares","Array","fill","turn","setTurn","winner","setWinner","checkEndTheGame","square","checkWinner","combos","combo","a","b","c","updateSquares","ind","s","W","resetGame","minimax","depth","isMaximizingPlayer","maxEval","Infinity","i","length","evaluation","Math","max","minEval","min","bestMove","bestEval","move","className","children","fileName","_jsxFileName","lineNumber","columnNumber","from","map","clsName","div","initial","opacity","animate","exit","scale","h2","y","transition","delay","duration","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/GameZone/Games/TicTacToeAI/src/app.js"],"sourcesContent":["import { motion, AnimatePresence } from \"framer-motion\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Button from \"./components/Button\";\r\nimport Square from \"./components/Square\";\r\nimport \"./index.css\";\r\n\r\nfunction App() {\r\n    const [squares, setSquares] = useState(Array(9).fill(\"\"));\r\n    const [turn, setTurn] = useState(\"x\");\r\n    const [winner, setWinner] = useState(null);\r\n\r\n    const checkEndTheGame = () => {\r\n        for (let square of squares) {\r\n            if (!square) return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const checkWinner = () => {\r\n        const combos = [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6],\r\n        ];\r\n\r\n        for (let combo of combos) {\r\n            const [a, b, c] = combo;\r\n            if (\r\n                squares[a] &&\r\n                squares[a] === squares[b] &&\r\n                squares[a] === squares[c]\r\n            ) {\r\n                return squares[a];\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const updateSquares = (ind) => {\r\n        if (squares[ind] || winner) {\r\n            return;\r\n        }\r\n        const s = squares;\r\n        s[ind] = turn;\r\n        setSquares(s);\r\n        setTurn(turn === \"x\" ? \"o\" : \"x\");\r\n        const W = checkWinner();\r\n        if (W) {\r\n            setWinner(W);\r\n        } else if (checkEndTheGame()) {\r\n            setWinner(\"x | o\");\r\n        }\r\n    };\r\n\r\n    const resetGame = () => {\r\n        setSquares(Array(9).fill(\"\"));\r\n        setTurn(\"x\");\r\n        setWinner(null);\r\n    };\r\n\r\n    const minimax = (squares, depth, isMaximizingPlayer) => {\r\n        const winner = checkWinner();\r\n        if (winner !== null) {\r\n            return winner === 'o' ? 10 - depth : depth - 10;\r\n        }\r\n\r\n        if (checkEndTheGame()) {\r\n            return 0;\r\n        }\r\n\r\n        if (isMaximizingPlayer) {\r\n            let maxEval = -Infinity;\r\n            for (let i = 0; i < squares.length; i++) {\r\n                if (squares[i] === \"\") {\r\n                    squares[i] = 'o';\r\n                    const evaluation = minimax(squares, depth + 1, false);\r\n                    squares[i] = \"\";\r\n                    maxEval = Math.max(maxEval, evaluation);\r\n                }\r\n            }\r\n            return maxEval;\r\n        } else {\r\n            let minEval = Infinity;\r\n            for (let i = 0; i < squares.length; i++) {\r\n                if (squares[i] === \"\") {\r\n                    squares[i] = 'x';\r\n                    const evaluation = minimax(squares, depth + 1, true);\r\n                    squares[i] = \"\";\r\n                    minEval = Math.min(minEval, evaluation);\r\n                }\r\n            }\r\n            return minEval;\r\n        }\r\n    };\r\n\r\n    const bestMove = () => {\r\n        let bestEval = -Infinity;\r\n        let move = null;\r\n        for (let i = 0; i < squares.length; i++) {\r\n            if (squares[i] === \"\") {\r\n                squares[i] = 'o';\r\n                const evaluation = minimax(squares, 0, false);\r\n                squares[i] = \"\";\r\n                if (evaluation > bestEval) {\r\n                    bestEval = evaluation;\r\n                    move = i;\r\n                }\r\n            }\r\n        }\r\n        updateSquares(move);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (turn === 'o') {\r\n            bestMove();\r\n        }\r\n    }, [turn]);\r\n\r\n    return (\r\n        <div className=\"tic-tac-toe\">\r\n            <h1> TIC-TAC-TOE </h1>\r\n            <Button resetGame={resetGame} />\r\n            <div className=\"game\">\r\n                {Array.from(\"012345678\").map((ind) => (\r\n                    <Square\r\n                        key={ind}\r\n                        ind={ind}\r\n                        updateSquares={updateSquares}\r\n                        clsName={squares[ind]}\r\n                    />\r\n                ))}\r\n            </div>\r\n            <AnimatePresence>\r\n                {winner && (\r\n                    <motion.div\r\n                        key={\"parent-box\"}\r\n                        initial={{ opacity: 0 }}\r\n                        animate={{ opacity: 1 }}\r\n                        exit={{ opacity: 0 }}\r\n                        className=\"winner\"\r\n                    >\r\n                        <motion.div\r\n                            key={\"child-box\"}\r\n                            initial={{ scale: 0 }}\r\n                            animate={{ scale: 1 }}\r\n                            exit={{ scale: 0, opacity: 0 }}\r\n                            className=\"text\"\r\n                        >\r\n                            <motion.h2\r\n                                initial={{ scale: 0, y: 100 }}\r\n                                animate={{\r\n                                    scale: 1,\r\n                                    y: 0,\r\n                                    transition: {\r\n                                        y: { delay: 0.7 },\r\n                                        duration: 0.7,\r\n                                    },\r\n                                }}\r\n                            >\r\n                                {\r\n                                    winner === \"x\" ? \"You won :)\" : winner === \"o\" ? \"You lost :(\" : \"No winner :/\"\r\n                                }\r\n                            </motion.h2>\r\n                            <motion.div\r\n                                initial={{ scale: 0 }}\r\n                                animate={{\r\n                                    scale: 1,\r\n                                    transition: {\r\n                                        delay: 1.3,\r\n                                        duration: 0.2,\r\n                                    },\r\n                                }}\r\n                                className=\"win\"\r\n                            >\r\n                                {winner === \"x | o\" ? (\r\n                                    <>\r\n                                        <Square clsName=\"x\" />\r\n                                        <Square clsName=\"o\" />\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <Square clsName={winner} />\r\n                                    </>\r\n                                )}\r\n                            </motion.div>\r\n                            <motion.div\r\n                                initial={{ scale: 0 }}\r\n                                animate={{\r\n                                    scale: 1,\r\n                                    transition: { delay: 1.5, duration: 0.3 },\r\n                                }}\r\n                            >\r\n                                <Button resetGame={resetGame} />\r\n                            </motion.div>\r\n                        </motion.div>\r\n                    </motion.div>\r\n                )}\r\n            </AnimatePresence>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}